name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Authentication for GitHub npm registry
env:
  NODE_AUTH_TOKEN: ${{ secrets.GH_PACKAGES_PAT }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  lighthouse:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        # ensure that git history is available (pull request checks don't work otherwise)
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 20
      - if: ${{github.base_ref}}
        run: git fetch --depth=1 origin +refs/heads/${{github.base_ref}}:refs/remotes/origin/${{github.base_ref}}

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.0.0-rc.6
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'pnpm'
          cache-dependency-path: ./pnpm-lock.yaml
          registry-url: 'https://npm.pkg.github.com'

      - name: pnpm install, build
        run: |
          pnpm install
          pnpm run build

      - name: run Lighthouse CI
        run: |
          pnpm install -g @lhci/cli@0.9.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.0.0-rc.6
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'pnpm'
          cache-dependency-path: ./pnpm-lock.yaml
          registry-url: 'https://npm.pkg.github.com'

      - name: pnpm install, build
        run: |
          pnpm install
          pnpm run build
      - run: pnpm run check
      - run: pnpm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: echo $NODE_AUTH_TOKEN

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.0.0-rc.6
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'pnpm'
          cache-dependency-path: ./pnpm-lock.yaml
          registry-url: 'https://npm.pkg.github.com'

      - name: pnpm install, build
        run: |
          pnpm install
          npx playwright install

      - name: test
        run: |
          pnpm run test
